/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt {
    quick_tap_ms = <220>;
};

&mt {
    quick_tap_ms = <220>;
};

/ {
    macros {
        numdot: numdot {
            label = "ZM_numdot";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N4 &kp KP_N6>,
                <&macro_release>,
                <&kp LALT>;
        };

        grtsgn: grtsgn {
            label = "ZM_grtsgn";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <40>;
            tap-ms = <40>;
            bindings =
                <&macro_press>,
                <&kp LALT>,
                <&macro_tap>,
                <&kp KP_N6 &kp KP_N2>,
                <&macro_release>,
                <&kp LALT>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt LWIN RBKT    &kp Q  &kp W  &kp E      &kp R            &kp T      &kp Y      &kp U           &kp I      &kp O    &kp P     &mt RWIN LBKT
&mt LCTRL GRAVE  &kp A  &kp S  &kp D      &kp F            &kp G      &kp H      &kp J           &kp K      &kp L    &kp SEMI  &mt RCTRL SQT
&mt LALT BSLH    &kp Z  &kp X  &kp C      &kp V            &kp B      &kp N      &kp M           &kp COMMA  &kp DOT  &kp FSLH  &mt RALT MINUS
                               &lt 2 TAB  &mt LSHFT SPACE  &lt 1 RET  &lt 1 ESC  &mt RSHFT BSPC  &lt 2 DEL
            >;
        };

        lower_layer {
            bindings = <
&mt LWIN CAPS    &kp KP_MULTIPLY  &kp N7  &kp N8     &kp N9  &kp PLUS   &kp EXCL       &kp AT    &kp HASH   &kp DLLR  &kp PRCNT  &mt RWIN F1
&mt LCTRL K_APP  &kp KP_SLASH     &kp N4  &kp N5     &kp N6  &kp MINUS  &kp CARET      &kp AMPS  &kp STAR   &kp LPAR  &kp RPAR   &mt RCTRL F2
&mt LALT EQUAL   &kp N0           &kp N1  &kp N2     &kp N3  &numdot    &kp LG(SPACE)  &kp F4    &kp F5     &kp F6    &kp F7     &mt RALT F3
                                          &lt 3 TAB  &trans  &trans     &trans         &trans    &lt 3 DEL
            >;
        };

        raise_layer {
            bindings = <
&kp LWIN   &kp C_PP     &kp PG_UP  &kp UP_ARROW  &kp HOME   &kp C_VOL_UP  &kp C_VOL_UP       &kp HOME  &kp UP            &kp PG_UP  &kp C_PP    &kp RWIN
&kp LCTRL  &kp C_PLAY   &kp LEFT   &kp DOWN      &kp RIGHT  &kp C_VOL_DN  &kp C_VOLUME_DOWN  &kp LEFT  &kp DOWN          &kp RIGHT  &kp C_PLAY  &kp RCTRL
&kp LALT   &kp C_PAUSE  &kp PG_DN  &kp LG(LALT)  &kp END    &kp C_MUTE    &kp N0             &kp END   &kp LS(LEFT_WIN)  &kp PG_DN  &kp C_MUTE  &kp RALT
                                   &trans        &trans     &lt 3 RET     &lt 3 ESC          &trans    &trans
            >;
        };

        adjust_layer {
            bindings = <
&bootloader  &none       &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &mwh SCROLL_VERT 10   &mwh SCROLL_UP    &mkp LCLK       &mmv MOVE_UP    &mkp RCLK        &none  &bootloader
&none        &none       &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &mwh SCROLL_VERT -10  &mwh SCROLL_DOWN  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &none  &bt BT_DISC 0
&none        &kp KP_NUM  &none           &none           &none            &none                 &bt BT_SEL 0      &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3     &none  &bt BT_CLR
                                         &trans          &none            &trans                &trans            &none           &trans
            >;
        };
    };
};
